{"version":3,"sources":["actions/actionTypes.js","actions/index.js","Components/PokeSearchBar.js","Components/PokeInfo.js","Components/PokeSearch.js","Components/Pokemon.js","Components/PageButton.js","Components/LoadingPage.js","Components/PageList.js","Components/PokeList.js","Components/PokeSurveyResult.js","Components/PokeSurvey.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["CHANGE_POKE_NAME","NEXT_PAGE","PREVIOUS_PAGE","SET_MAX_PAGE","CHANGE_PAGE","CHANGE_SURVEY_STATUS","changeSurveyStatus","type","types","PokeSearchBar","state","searchKeyword","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","handlePokeName","react_default","a","createElement","id","method","onSubmit","this","autoComplete","name","onChange","Component","connect","currentPokeName","dispatch","pokeName","actions","PokeInfo","paramError","pokeInfo","isLoaded","componentDidMount","_callee","response","regenerator_default","wrap","_context","prev","next","_APICall","sent","stop","componentWillReceiveProps","_callee2","nextProps","_context2","_callee3","url","res","_context3","concat","fetch","json","abrupt","_this$state","src","poke_image","alt","className","poke_height","poke_weight","map","pokemon","index","length","type_name_ko","PokeSearch","Components_PokeInfo","Components_PokeSearchBar","Pokemon","_ref","image","habitat","PageButton","_this$props","pageNum","currentPage","handleChangePage","onClick","bind","LoadingPage","PageList","maxPage","pageList","_createPageList","handleNextPage","handlePreviousPage","unshift","push","filter","page","_this$props2","Components_PageButton","key","Components_LoadingPage","PokeList","data","pokeList","result","setMaxPage","then","react","Components_Pokemon","poke_id","habitat_name_ko","poke_name_ko","Components_PageList","PokeSurveyResult","_handleSurveyToggle","handleSurveyToggle","_this$props$surveyRes","surveyResult","PokeSurvey","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_preventDefault","asyncToGenerator","mark","e","req","randomIndex","isSanitary","_getRadioValue","isActive","isIndependent","isMeek","isExtrovert","isCurious","isUnusual","headers","Content-Type","Accept","body","JSON","stringify","Math","floor","random","_x","apply","arguments","document","getElementsByName","forEach","item","checked","assertThisInitialized","currentSurveyStatus","Components_PokeSurveyResult","action","defaultChecked","App","Components_PokeList","Components_PokeSearch","Components_PokeSurvey","Boolean","window","location","hostname","match","initialState","store","createStore","undefined","assign","newState","console","log","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0bAAaA,EAAmB,mBACnBC,EAAY,YACZC,EAAgB,gBAChBC,EAAe,eACfC,EAAc,cACdC,EAAuB,uBCgB7B,SAASC,IACZ,MAAM,CACFC,KAAKC,aClBPC,6MACFC,MAAM,CACFC,cAAc,MAGlBC,aAAa,SAACC,GACVC,EAAKC,SAAS,CACVJ,cAAcE,EAAMG,OAAOC,WAInCC,aAAa,SAACL,GACVA,EAAMM,iBACNL,EAAKM,MAAMC,eAAeP,EAAKJ,MAAMC,wFAIrC,OACIW,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACJH,EAAAC,EAAAC,cAAA,QAAME,OAAO,MAAMC,SAAUC,KAAKV,cAC9BI,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACIK,aAAa,QACbZ,MAAOW,KAAKlB,MAAMC,cAClBJ,KAAK,OACLuB,KAAK,WACLC,SAAUH,KAAKhB,eACnBU,EAAAC,EAAAC,cAAA,SACIP,MAAM,GACNV,KAAK,oBA7BDyB,aAiDbC,cAZO,SAACvB,GACnB,MAAO,CACHwB,gBAAgBxB,EAAMwB,kBAIL,SAACC,GACtB,MAAO,CACHd,eAAe,SAACe,GAAYD,EDhD7B,SAAwBC,GAC3B,MAAM,CACF7B,KAAKC,EACL4B,YC6CqCC,CAAuBD,OAIrDH,CAA4CxB,0BClDrD6B,oNACF5B,MAAM,CACF0B,SAAStB,EAAKM,MAAMgB,SACpBG,WAAW,KACXC,SAAS,KACTC,UAAS,KAGbC,uCAAkB,SAAAC,IAAA,IAAAP,EAAAQ,EAAA,OAAAC,EAAAtB,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACRb,EAAStB,EAAKJ,MAAM0B,SADZW,EAAAE,KAAA,EAEOnC,EAAKoC,SAASd,GAFrB,cAERQ,EAFQG,EAAAI,KAAAJ,EAAAE,KAAA,EAGRnC,EAAKC,SAAS,CAChBwB,WAAWK,EAASL,WACpBC,SAASI,EAASJ,SAASI,EAASJ,SAAS,KAC7CC,UAAS,IANC,wBAAAM,EAAAK,SAAAT,QAUlBU,gEAA0B,SAAAC,EAAMC,GAAN,IAAAnB,EAAAQ,EAAA,OAAAC,EAAAtB,EAAAuB,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,UACnBM,EAAUnB,WAAWtB,EAAKJ,MAAM0B,SADb,CAAAoB,EAAAP,KAAA,eAAAO,EAAAP,KAAA,EAEZnC,EAAKC,SAAS,CAChBqB,SAASmB,EAAUnB,WAHL,cAKZA,EAAStB,EAAKJ,MAAM0B,SALRoB,EAAAP,KAAA,EAMGnC,EAAKoC,SAASd,GANjB,cAMZQ,EANYY,EAAAL,KAAAK,EAAAP,KAAA,EAOZnC,EAAKC,SAAS,CAChBwB,WAAWK,EAASL,WACpBC,SAASI,EAASJ,SAASI,EAASJ,SAAS,KAC7CC,UAAS,IAVK,gCAAAe,EAAAJ,SAAAE,8DAe1BJ,+CAAS,SAAAO,EAAOrB,GAAP,IAAAsB,EAAAC,EAAA,OAAAd,EAAAtB,EAAAuB,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cACCS,EADD,gBAAAG,OACqBzB,GADrBwB,EAAAX,KAAA,EAESa,MAAMJ,GAFf,cAEDC,EAFCC,EAAAT,KAAAS,EAAAX,KAAA,EAGKU,EAAII,OAHT,cAGLJ,EAHKC,EAAAT,KAAAS,EAAAI,OAAA,SAIEL,GAJF,wBAAAC,EAAAR,SAAAK,oIAOD,IAAAQ,EAC0CrC,KAAKlB,MAA5C6B,EADH0B,EACG1B,WAAWE,EADdwB,EACcxB,SAASD,EADvByB,EACuBzB,SAASJ,EADhC6B,EACgC7B,SACpC,OAAGG,GAAYE,EAEPnB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAAA,OACI0C,IAAK1B,EAAS,GAAG2B,WACjBC,IAAKhC,IAGTd,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,0BACA/C,EAAAC,EAAAC,cAAA,QAAMC,GAAG,kBAAkBW,IAC/Bd,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,oBACA/C,EAAAC,EAAAC,cAAA,QAAMC,GAAG,oBAAoBe,EAAS,GAAG8B,cAC7ChD,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,0BACA/C,EAAAC,EAAAC,cAAA,QAAMC,GAAG,oBAAoBe,EAAS,GAAG+B,cAC7CjD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,0BACC7B,EAASgC,IAAI,SAACC,EAAQC,GAClB,OAAGA,IAAQlC,EAASmC,OAAO,EAEnBrD,EAAAC,EAAAC,cAAA,QAAMC,GAAG,mBAAmBgD,EAAQG,aAApC,KAIAtD,EAAAC,EAAAC,cAAA,QAAMC,GAAG,mBAAmBgD,EAAQG,kBASrD,oBA5EI5C,cAqFRC,cALO,SAACvB,GACnB,MAAM,CACF0B,SAAS1B,EAAMwB,kBAGRD,CAAyBK,GCnFlCuC,0LAEE,IACIrC,EADEJ,EAASR,KAAKR,MAAMgB,SAO1B,OAJII,EADU,KAAXJ,EACU,GAEAd,EAAAC,EAAAC,cAACsD,EAAD,CAAU1C,SAAUA,IAG7Bd,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACJH,EAAAC,EAAAC,cAACuD,EAAD,MACCvC,UAZQR,cAwBVC,cANO,SAACvB,GACnB,MAAM,CACF0B,SAAS1B,EAAMwB,kBAIRD,CAAyB4C,GCIzBG,SAhCC,SAAAC,GAAiC,IAA/BxD,EAA+BwD,EAA/BxD,GAAGK,EAA4BmD,EAA5BnD,KAAKoD,EAAuBD,EAAvBC,MAAMC,EAAiBF,EAAjBE,QAAQ3E,EAASyE,EAATzE,MACpC,OACIc,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,WACX/C,EAAAC,EAAAC,cAAA,KAAGC,GAAG,cACDA,GAGLH,EAAAC,EAAAC,cAAA,OAAK0C,IAAKgB,EAAOd,IAAKtC,IAEtBR,EAAAC,EAAAC,cAAA,KAAGC,GAAG,gBACFH,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,yBADJ,IACsDvC,GAGtDR,EAAAC,EAAAC,cAAA,KAAGC,GAAG,mBACFH,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,gCADJ,IACwDc,GAAgB,6BAGxE7D,EAAAC,EAAAC,cAAA,KAAGC,GAAG,gBACFH,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,cAAhB,0BAEI7D,EAAMgE,IAAI,SAACjE,EAAKmE,GACZ,OAAGA,IAAQlE,EAAMmE,OAAO,EACbpE,EAEP,GAAAsD,OAAUtD,EAAV,WCrBtB6E,0LACM,IAAAC,EACyCzD,KAAKR,MAA3CkE,EADHD,EACGC,QAAQC,EADXF,EACWE,YAAYC,EADvBH,EACuBG,iBAC3B,OAAGF,IAAUC,EAELjE,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,wBACX/C,EAAAC,EAAAC,cAAA,QAAMiE,QAASD,EAAiBE,KAAK9D,KAAK0D,IAAWA,IAKzDhE,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,eACX/C,EAAAC,EAAAC,cAAA,QAAMiE,QAASD,EAAiBE,KAAK9D,KAAK0D,IAAWA,WAZhDtD,cA+BVC,cAZO,SAACvB,GACnB,MAAM,CACF6E,YAAY7E,EAAM6E,cAID,SAACpD,GACtB,MAAM,CACFqD,iBAAiB,SAACF,GAAWnD,ELE9B,SAAoBmD,GACvB,MAAM,CACF/E,KAAKC,EACL8E,WKLsCjD,CAAmBiD,OAIlDrD,CAA4CmD,GCvB5CO,SAVG,WACd,OACIrE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACJH,EAAAC,EAAAC,cAAA,OACI0C,IAAI,uBACJE,IAAI,kBCDdwB,oNACFlF,MAAM,KAENgC,uCAAkB,SAAAC,IAAA,IAAA0C,EAAAE,EAAAM,EAAA,OAAAhD,EAAAtB,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAoC,EACcvE,EAAKM,MAA1BmE,EADOF,EACPE,YAAYM,EADLR,EACKQ,QADL9C,EAAAE,KAAA,EAERnC,EAAKC,SAAS,CAChB+E,SAAShF,EAAKiF,gBAAgBR,EAAYM,KAHhC,wBAAA9C,EAAAK,SAAAT,QAOlBU,gEAA0B,SAAAC,EAAOC,GAAP,OAAAV,EAAAtB,EAAAuB,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,UACnBnC,EAAKM,QAAQmC,EADM,CAAAC,EAAAP,KAAA,eAAAO,EAAAP,KAAA,EAEZnC,EAAKC,SAAS,CAChB+E,SAAShF,EAAKiF,gBAAgBxC,EAAUgC,YAAYhC,EAAUsC,WAHhD,wBAAArC,EAAAJ,SAAAE,8DAQ1B0C,eAAe,WACXlF,EAAKM,MAAM4E,oBAGfC,mBAAmB,WACfnF,EAAKM,MAAM6E,wBAGfT,iBAAiB,SAACF,GACdxE,EAAKM,MAAMoE,iBAAiBF,MAIhCS,gBAAgB,SAACR,EAAYM,GACzB,IAAMC,EAAS,CAAC,CACZR,QAAQC,EACRA,gBAiBJ,OAbAO,EAASI,QAAQ,CAACZ,QAAQC,EAAY,EAAEA,gBACxCO,EAASI,QAAQ,CAACZ,QAAQC,EAAY,EAAEA,gBACxCO,EAASI,QAAQ,CAACZ,QAAQC,EAAY,EAAEA,gBAGxCO,EAASK,KAAK,CAACb,QAAQC,EAAY,EAAEA,gBACrCO,EAASK,KAAK,CAACb,QAAQC,EAAY,EAAEA,gBACrCO,EAASK,KAAK,CAACb,QAAQC,EAAY,EAAEA,gBAGdO,EAASM,OAAO,SAAAC,GACnC,OAAQA,EAAKf,SAASO,GAASQ,EAAKf,SAAS,6EAK5C,IAAAgB,EACuB1E,KAAKR,MAA1ByE,EADFS,EACET,QAAQN,EADVe,EACUf,YAGf,OAFgBM,GAAWN,EAInBjE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACJH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBAAkBgE,QAAS7D,KAAKqE,qBAGvCrE,KAAKlB,MAAMoF,SAAStB,IAAI,SAAC6B,EAAK3B,GAC1B,OAAQpD,EAAAC,EAAAC,cAAC+E,EAAD,CAAYjB,QAASe,EAAKf,QAASkB,IAAK9B,MAGxDpD,EAAAC,EAAAC,cAAA,UAAQC,GAAG,cAAcgE,QAAS7D,KAAKoE,kBAKxC1E,EAAAC,EAAAC,cAACiF,EAAD,aAzEIzE,cA4FRC,cAdO,SAACvB,GACnB,MAAO,CACH6E,YAAY7E,EAAM6E,YAClBM,QAAQnF,EAAMmF,UAIG,SAAC1D,GACtB,MAAM,CACF6D,eAAe,WAAK7D,EPpFlB,CACF5B,KAAKC,KOoFLyF,mBAAmB,WAAK9D,EP/EtB,CACF5B,KAAKC,OOkFEyB,CAA4C2D,GC3FrDc,oNACFhG,MAAM,CACF+B,UAAS,KAGbC,uCAAkB,SAAAC,IAAA,IAAA4C,EAAAoB,EAAA,OAAA9D,EAAAtB,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPsC,EAAazE,EAAKM,MAAlBmE,YADOxC,EAAAE,KAAA,EAEGnC,EAAKoC,SAASqC,GAFjB,cAERoB,EAFQ5D,EAAAI,KAAAJ,EAAAE,KAAA,EAGRnC,EAAKC,SAAS,CAChB8E,QAAQc,EAAKd,QACbtD,WAAWoE,EAAKpE,WAChBqE,SAASD,EAAKE,OAAOF,EAAKE,OAAO,KACjCpE,UAAS,IAPC,cAAAM,EAAAE,KAAA,EASRnC,EAAKM,MAAM0F,WAAWhG,EAAKJ,MAAMmF,SATzB,wBAAA9C,EAAAK,SAAAT,QAYlBU,gEAA0B,SAAAC,EAAMC,GAAN,IAAAoD,EAAA,OAAA9D,EAAAtB,EAAAuB,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,UACnBM,EAAUgC,cAAczE,EAAKM,MAAMmE,YADhB,CAAA/B,EAAAP,KAAA,eAAAO,EAAAP,KAAA,EAGZnC,EAAKC,SAAS,CAAC0B,UAAS,IAHZ,cAAAe,EAAAP,KAAA,EAKDnC,EAAKoC,SAASK,EAAUgC,aALvB,cAKZoB,EALYnD,EAAAL,KAAAK,EAAAP,KAAA,EAOZnC,EAAKC,SAAS,CAChBwB,WAAWoE,EAAKpE,WAChBqE,SAASD,EAAKE,OAAOF,EAAKE,OAAO,KACjCpE,UAAS,IAVK,wBAAAe,EAAAJ,SAAAE,8DAe1BJ,+CAAS,SAAAO,EAAO8B,GAAP,IAAA7B,EAAAiD,EAAA,OAAA9D,EAAAtB,EAAAuB,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cACCS,EADD,cAAAG,OACmB0B,GADnB3B,EAAAX,KAAA,EAEca,MAAMJ,GAAKqD,KAAK,SAAApD,GAAG,OAAEA,EAAII,SAFvC,cAEC4C,EAFD/C,EAAAT,KAAAS,EAAAI,OAAA,SAGE2C,GAHF,wBAAA/C,EAAAR,SAAAK,oIAOL,OAAyB,IAAtB7B,KAAKlB,MAAM+B,WAAyC,IAAxBb,KAAKlB,MAAM6B,WAElCjB,EAAAC,EAAAC,cAACwF,EAAA,SAAD,KACI1F,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBAEAG,KAAKlB,MAAMkG,SAASpC,IAAI,SAACC,EAAQC,GAC7B,OACIpD,EAAAC,EAAAC,cAACyF,EAAD,CACIxF,GAAIgD,EAAQyC,QACZhC,MAAOT,EAAQN,WACfgB,QAASV,EAAQ0C,gBACjBrF,KAAM2C,EAAQ2C,aACd5G,MAAOiE,EAAQjE,MACfgG,IAAK9B,OAKzBpD,EAAAC,EAAAC,cAAC6F,EAAD,OAKJ/F,EAAAC,EAAAC,cAACwF,EAAA,SAAD,KACI1F,EAAAC,EAAAC,cAACiF,EAAD,MACAnF,EAAAC,EAAAC,cAAC6F,EAAD,cAhEGrF,cAkFRC,cAZO,SAACvB,GACnB,MAAM,CACF6E,YAAY7E,EAAM6E,cAID,SAACpD,GACtB,MAAM,CACF2E,WAAW,SAACjB,GAAW1D,ER3DxB,SAAoB0D,GACvB,MAAM,CACFtF,KAAKC,EACLqF,WQwDgCxD,CAAmBwD,OAI5C5D,CAA4CyE,WCrFrDY,oNACFC,oBAAoB,WAChBzG,EAAKM,MAAMoG,8FAGN,IAAAC,EACgE7F,KAAKR,MAAMsG,aAAzEvD,EADFsD,EACEtD,WAAW+C,EADbO,EACaP,QAAQE,EADrBK,EACqBL,aAAaxC,EADlC6C,EACkC7C,aAAauC,EAD/CM,EAC+CN,gBACpD,OACI7F,EAAAC,EAAAC,cAAA,OAAKC,GAAG,sBACJH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,gBAAN,iBACAH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,qBAAhB,sCACA/C,EAAAC,EAAAC,cAAA,YAAO0F,IAEX5F,EAAAC,EAAAC,cAAA,OAAK0C,IAAKC,IAEV7C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,qBAAhB,0BACA/C,EAAAC,EAAAC,cAAA,YAAO4F,IAEX9F,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,qBAAhB,0BACA/C,EAAAC,EAAAC,cAAA,YAAOoD,IAEXtD,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,qBAAhB,gCACA/C,EAAAC,EAAAC,cAAA,YAAO2F,GAAgC,8BAG3C7F,EAAAC,EAAAC,cAAA,UAAQiE,QAAS7D,KAAK2F,qBAAtB,wBA7BevF,cA6ChBC,cAVO,SAACvB,GACnB,MAAM,IAGe,SAACyB,GACtB,MAAM,CACFqF,mBAAmB,WAAKrF,EAASE,QAI1BJ,CAA4CqF,GC5CrDK,qBACF,SAAAA,EAAYvG,GAAM,IAAAN,EAAA,OAAA8G,OAAAC,EAAA,EAAAD,CAAAhG,KAAA+F,IACd7G,EAAA8G,OAAAE,EAAA,EAAAF,CAAAhG,KAAAgG,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAApG,KAAMR,KAIV6G,gBALkB,eAAAhD,EAAA2C,OAAAM,EAAA,EAAAN,CAAA/E,EAAAtB,EAAA4G,KAKF,SAAAxF,EAAOyF,GAAP,IAAAC,EAAAzF,EAAA0F,EAAA,OAAAzF,EAAAtB,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZmF,EAAEjH,kBACIkH,EAAI,IACNE,WAAWzH,EAAK0H,eAAe,cACnCH,EAAII,SAAS3H,EAAK0H,eAAe,YACjCH,EAAIK,cAAc5H,EAAK0H,eAAe,iBAEtCH,EAAIM,OAAO7H,EAAK0H,eAAe,UAC/BH,EAAIO,YAAY9H,EAAK0H,eAAe,eACpCH,EAAIQ,UAAU/H,EAAK0H,eAAe,aAClCH,EAAIS,UAAUhI,EAAK0H,eAAe,aAExB,eAZEzF,EAAAE,KAAA,GAaOa,MADT,eACmB,CACzBpC,OAAO,OACPqH,QAAQ,CACJC,eAAe,mBACfC,OAAS,oBAEbC,KAAKC,KAAKC,UAAUf,KAnBZ,eAaRzF,EAbQG,EAAAI,KAAAJ,EAAAE,KAAA,GAqBGL,EAASmB,OArBZ,eAqBZnB,EArBYG,EAAAI,KAsBNmF,EAAYe,KAAKC,MAAMD,KAAKE,SAAW3G,EAAS+B,QAtB1C5B,EAAAE,KAAA,GAwBNnC,EAAKC,SAAS,CAChB2G,aAAa9E,EAAS0F,KAzBd,eAAAvF,EAAAE,KAAA,GA4BNnC,EAAKM,MAAMoG,qBA5BL,yBAAAzE,EAAAK,SAAAT,MALE,gBAAA6G,GAAA,OAAAvE,EAAAwE,MAAA7H,KAAA8H,YAAA,GAAA5I,EAoClB0H,eAAe,SAAC1G,GACZ,IAAI+E,EAOJ,OANe8C,SAASC,kBAAkB9H,GACjC+H,QAAQ,SAACC,IACI,IAAfA,EAAKC,UACJlD,EAAOiD,EAAK7I,SAGb4F,GA1CP/F,EAAKmH,gBAAgBnH,EAAKmH,gBAAgBvC,KAArBkC,OAAAoC,EAAA,EAAApC,CAAA9G,IAFPA,wEAiDd,OAAyB,IADGc,KAAKR,MAA1B6I,oBAC+B3I,EAAAC,EAAAC,cAAC0I,EAAD,CAAkBxC,aAAc9F,KAAKlB,MAAMgH,eAE7EpG,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACJH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,gBAAN,sBACAH,EAAAC,EAAAC,cAAA,QAAM2I,OAAO,eAAezI,OAAO,OAAOC,SAAUC,KAAKqG,iBACrD3G,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,8FACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,aAAab,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAE5E/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,aAAab,MAAM,QAAQoD,UAAU,0BAGtE/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,kEACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,WAAWb,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAE1E/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBAEA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,WAAWb,MAAM,QAAQoD,UAAU,0BAGpE/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,mGACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,gBAAgBb,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAE/E/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,gBAAgBb,MAAM,QAAQoD,UAAU,0BAGzE/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,6FACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,SAASb,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAExE/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,SAASb,MAAM,QAAQoD,UAAU,0BAGlE/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,sFACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,cAAcb,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAE7E/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,cAAcb,MAAM,QAAQoD,UAAU,0BAGvE/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,oEACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,YAAYb,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAE3E/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,YAAYb,MAAM,QAAQoD,UAAU,0BAGrE/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG6C,UAAU,kBACT/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,gBAAhB,sHACA/C,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,OAAhB,UACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,YAAYb,MAAM,OAAOmJ,gBAAc,EAAC/F,UAAU,uBAE3E/C,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,MAAhB,sBACA/C,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,QAAQuB,KAAK,YAAYb,MAAM,QAAQoD,UAAU,0BAIrE/C,EAAAC,EAAAC,cAAA,KAAGC,GAAG,yBACFH,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,SAASU,MAAM,qBAtI1Be,cA0JVC,cAZO,SAACvB,GACnB,MAAO,CACHuJ,oBAAoBvJ,EAAMuJ,sBAIT,SAAC9H,GACtB,MAAO,CACHqF,mBAAmB,WAAKrF,EAASE,QAI1BJ,CAA4C0F,GClI5C0C,0LAjBX,OACE/I,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACNH,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAC8I,EAAD,OAEFhJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAC+I,EAAD,MACAjJ,EAAAC,EAAAC,cAACgJ,EAAD,eAZQxI,cCCEyI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uEChBAC,EAAa,CACf5I,gBAAgB,GAChBqD,YAAY,EACZM,QAAQ,KACRoE,qBAAoB,GCIxB,IAAMc,EAAMC,YDDL,WAA2C,IAA1BtK,EAA0BgJ,UAAA/E,OAAA,QAAAsG,IAAAvB,UAAA,GAAAA,UAAA,GAApBoB,EAAaX,EAAOT,UAAA/E,OAAA,EAAA+E,UAAA,QAAAuB,EAC9C,OAAOd,EAAO5J,MAEV,KAAKC,EAMD,OALeoH,OAAOsD,OAClB,GACAxK,EACA,CAACwB,gBAAgBiI,EAAO/H,WAKhC,KAAK5B,EACD,OAAGE,EAAM6E,aAAa7E,EAAMmF,QACjBnF,EAEIkH,OAAOsD,OAClB,GACAxK,EACA,CAAC6E,YAAY7E,EAAM6E,YAAY,IAIvC,KAAK/E,EAED,OAAGE,EAAM6E,aAAa,EACX7E,EAEIkH,OAAOsD,OAClB,GACAxK,EACA,CAAC6E,YAAY7E,EAAM6E,YAAY,IAIvC,KAAK/E,EAMD,OALeoH,OAAOsD,OAClB,GACAxK,EACA,CAACmF,QAAQsE,EAAOtE,UAIxB,KAAKrF,EAMD,OALeoH,OAAOsD,OAClB,GACAxK,EACA,CAAC6E,YAAY4E,EAAO7E,UAK5B,KAAK9E,EACD,IAAM2K,EAASvD,OAAOsD,OAClB,GACAxK,EACA,CAACuJ,qBAAqBvJ,EAAMuJ,sBAGhC,OADAmB,QAAQC,IAAIF,GACLA,EAGX,QAAU,OAAOzK,IC3DrBgK,OAAOY,8BAAgCZ,OAAOY,gCAGlDC,IAASC,OACLlK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAUV,MAAOA,GACbzJ,EAAAC,EAAAC,cAACkK,EAAD,OAEF/B,SAASgC,eAAe,SF8GxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/E,KAAK,SAAAgF,GACjCA,EAAaC","file":"static/js/main.a18a53af.chunk.js","sourcesContent":["export const CHANGE_POKE_NAME = \"CHANGE_POKE_NAME\";\r\nexport const NEXT_PAGE = \"NEXT_PAGE\";\r\nexport const PREVIOUS_PAGE = \"PREVIOUS_PAGE\";\r\nexport const SET_MAX_PAGE = \"SET_MAX_PAGE\";\r\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\r\nexport const CHANGE_SURVEY_STATUS = \"CHANGE_SURVEY_STATUS\";","import * as types from './actionTypes';\r\n\r\nexport function changePokeName(pokeName){\r\n    return{\r\n        type:types.CHANGE_POKE_NAME,\r\n        pokeName\r\n    };\r\n};\r\n\r\nexport function nextPage(){\r\n    return{\r\n        type:types.NEXT_PAGE\r\n    };\r\n};\r\n\r\nexport function previousPage(){\r\n    return{\r\n        type:types.PREVIOUS_PAGE\r\n    };\r\n};\r\n\r\nexport function changeSurveyStatus(){\r\n    return{\r\n        type:types.CHANGE_SURVEY_STATUS\r\n    };\r\n};\r\n\r\nexport function setMaxPage(maxPage){\r\n    return{\r\n        type:types.SET_MAX_PAGE,\r\n        maxPage\r\n    };\r\n};\r\n\r\nexport function changePage(pageNum){\r\n    return{\r\n        type:types.CHANGE_PAGE,\r\n        pageNum\r\n    };\r\n};","import React,{Component} from 'react';\r\nimport * as actions from '../actions/index';\r\nimport {connect} from 'react-redux';\r\nimport '../css/PokeSearchBar.css';\r\n\r\nclass PokeSearchBar extends Component {\r\n    state={\r\n        searchKeyword:\"\",\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            searchKeyword:event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        this.props.handlePokeName(this.state.searchKeyword)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"poke-search-bar\">\r\n                <form method=\"GET\" onSubmit={this.handleSubmit}>\r\n                    <p>Search</p>\r\n                    <input \r\n                        autoComplete=\"false\"\r\n                        value={this.state.searchKeyword} \r\n                        type=\"text\" \r\n                        name=\"pokeName\" \r\n                        onChange={this.handleChange}/>                \r\n                    <input \r\n                        value=\"\"\r\n                        type=\"submit\" \r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        currentPokeName:state.currentPokeName,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        handlePokeName:(pokeName)=>{dispatch(actions.changePokeName(pokeName))}\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokeSearchBar);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../css/PokeInfo.css';\r\n\r\nclass PokeInfo extends Component {\r\n    state={\r\n        pokeName:this.props.pokeName,\r\n        paramError:null,\r\n        pokeInfo:null,\r\n        isLoaded:false\r\n    };\r\n\r\n    componentDidMount=async()=>{\r\n        const pokeName=this.state.pokeName;\r\n        const response=await this._APICall(pokeName);\r\n        await this.setState({\r\n            paramError:response.paramError,\r\n            pokeInfo:response.pokeInfo?response.pokeInfo:null,\r\n            isLoaded:true\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps=async(nextProps)=>{\r\n        if(nextProps.pokeName!==this.state.pokeName){\r\n            await this.setState({\r\n                pokeName:nextProps.pokeName\r\n            });\r\n            const pokeName=this.state.pokeName;\r\n            const response=await this._APICall(pokeName);\r\n            await this.setState({\r\n                paramError:response.paramError,\r\n                pokeInfo:response.pokeInfo?response.pokeInfo:null,\r\n                isLoaded:true\r\n            });\r\n        };\r\n    }\r\n\r\n    _APICall=async (pokeName)=>{\r\n        const url=`/user/search/${pokeName}`;\r\n        let res=await fetch(url);\r\n        res=await res.json();\r\n        return res;\r\n    };\r\n    \r\n    render(){\r\n        const {paramError,isLoaded,pokeInfo,pokeName}=this.state;\r\n        if(paramError&&isLoaded){\r\n            return(\r\n                <div id=\"poke-info\">\r\n                    <img\r\n                        src={pokeInfo[0].poke_image}\r\n                        alt={pokeName}\r\n                    />\r\n                    \r\n                    <p>\r\n                        <span className=\"info-title\">&#8226; 이름 : </span>\r\n                        <span id=\"poke-info-name\">{pokeName}</span></p>\r\n                    <p>\r\n                        <span className=\"info-title\">&#8226; 키 : </span>\r\n                        <span id=\"poke-info-height\">{pokeInfo[0].poke_height}</span></p>\r\n                    <p>\r\n                        <span className=\"info-title\">&#8226; 무게 : </span>\r\n                        <span id=\"poke-info-weight\">{pokeInfo[0].poke_weight}</span></p>\r\n                    <p><span className=\"info-title\">&#8226; 타입 : </span>{\r\n                        pokeInfo.map((pokemon,index)=>{\r\n                            if(index!==pokeInfo.length-1){\r\n                                return (\r\n                                    <span id=\"poke-info-types\">{pokemon.type_name_ko},</span>\r\n                                )\r\n                            }else{\r\n                                return (\r\n                                    <span id=\"poke-info-types\">{pokemon.type_name_ko}</span>\r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }</p>\r\n                </div>\r\n            )\r\n        }else{\r\n            return \"Loading...\";\r\n        } \r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        pokeName:state.currentPokeName\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(PokeInfo);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PokeSearchBar from './PokeSearchBar';\r\nimport PokeInfo from './PokeInfo';\r\nimport '../css/PokeSearch.css';\r\n\r\nclass PokeSearch extends Component {\r\n    render(){\r\n        const pokeName=this.props.pokeName;\r\n        let pokeInfo;\r\n        if(pokeName===\"\"){\r\n            pokeInfo=\"\";\r\n        }else{\r\n            pokeInfo=<PokeInfo pokeName={pokeName}/>\r\n        }\r\n        return(\r\n            <div id=\"poke-search-wrapper\">\r\n                <PokeSearchBar/>\r\n                {pokeInfo}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        pokeName:state.currentPokeName\r\n    };    \r\n};\r\n\r\nexport default connect(mapStateToProps)(PokeSearch); \r\n\r\n//connect(mapStateToProps,mapDispatchToProps)(PokeSearch);","import React from 'react';\r\nimport '../css/Pokemon.css';\r\nconst Pokemon = ({id,name,image,habitat,types})=>{\r\n    return (\r\n        <div className=\"pokemon\">\r\n            <p id=\"pokemon-id\">\r\n                {id}\r\n            </p>\r\n            \r\n            <img src={image} alt={name}/>\r\n            \r\n            <p id=\"pokemon-name\">\r\n                <span className=\"poke-title\">&#8226; 이름 :</span> {name}\r\n            </p>\r\n\r\n            <p id=\"pokemon-habitat\">\r\n                <span className=\"poke-title\">&#8226; 서식지 : </span> {habitat?habitat:\"정보 없음\"}\r\n            </p>\r\n\r\n            <p id=\"pokemon-type\">\r\n                <span className=\"poke-title\">&#8226; 타입 : </span>\r\n                {\r\n                    types.map((type,index)=>{\r\n                        if(index===types.length-1){\r\n                            return type;\r\n                        }else{\r\n                            return `${type},`\r\n                        }\r\n                    })\r\n                }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\nexport default Pokemon;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nimport '../css/PageButton.css';\r\nclass PageButton extends Component{\r\n    render(){\r\n        const {pageNum,currentPage,handleChangePage}=this.props;\r\n        if(pageNum===currentPage){\r\n            return(\r\n                <div className=\"page-button-selected\">\r\n                    <span onClick={handleChangePage.bind(this,pageNum)}>{pageNum}</span>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"page-button\">\r\n                    <span onClick={handleChangePage.bind(this,pageNum)}>{pageNum}</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        currentPage:state.currentPage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        handleChangePage:(pageNum)=>{dispatch(actions.changePage(pageNum))}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PageButton);","import React from 'react';\r\nimport '../css/LoadingPage.css';\r\n\r\nconst LoadingPage=()=>{\r\n    return(\r\n        <div id=\"loading-page\">\r\n            <img \r\n                src=\"./images/loading.jpg\"\r\n                alt=\"Loading...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nimport PageButton from './PageButton';\r\nimport LoadingPage from './LoadingPage';\r\nimport '../css/PageList.css';\r\n\r\nclass PageList extends Component {\r\n    state={};\r\n    \r\n    componentDidMount=async()=>{\r\n        const {currentPage,maxPage}=this.props;\r\n        await this.setState({\r\n            pageList:this._createPageList(currentPage,maxPage)\r\n        });\r\n    };\r\n    \r\n    componentWillReceiveProps=async (nextProps)=>{\r\n        if(this.props!==nextProps){\r\n            await this.setState({\r\n                pageList:this._createPageList(nextProps.currentPage,nextProps.maxPage)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleNextPage=()=>{\r\n        this.props.handleNextPage();\r\n    };\r\n\r\n    handlePreviousPage=()=>{\r\n        this.props.handlePreviousPage();\r\n    };\r\n\r\n    handleChangePage=(pageNum)=>{\r\n        this.props.handleChangePage(pageNum);\r\n    };\r\n\r\n    //currentPage를 기반으로 pageList를 생성\r\n    _createPageList=(currentPage,maxPage)=>{\r\n        const pageList=[{\r\n            pageNum:currentPage,\r\n            currentPage\r\n        }];\r\n\r\n        //Insert element in front of array\r\n        pageList.unshift({pageNum:currentPage-1,currentPage});\r\n        pageList.unshift({pageNum:currentPage-2,currentPage});\r\n        pageList.unshift({pageNum:currentPage-3,currentPage});\r\n\r\n        //Insert element in back of array\r\n        pageList.push({pageNum:currentPage+1,currentPage});\r\n        pageList.push({pageNum:currentPage+2,currentPage});\r\n        pageList.push({pageNum:currentPage+3,currentPage});\r\n\r\n        //Filter Array\r\n        const filteredPageList=pageList.filter(page=>{\r\n            return (page.pageNum<=maxPage&&page.pageNum>=1);\r\n        });\r\n        return filteredPageList;\r\n    };\r\n\r\n    render() {\r\n        const {maxPage,currentPage}=this.props;\r\n        const condition=maxPage && currentPage;\r\n        \r\n        if(condition){\r\n            return (\r\n                <div id=\"page-list-wrapper\">\r\n                    <button id=\"previous-button\" onClick={this.handlePreviousPage}>\r\n                    </button>\r\n                    {\r\n                        this.state.pageList.map((page,index)=>{\r\n                            return (<PageButton pageNum={page.pageNum} key={index}/>)\r\n                        })\r\n                    }\r\n                    <button id=\"next-button\" onClick={this.handleNextPage}>\r\n                    </button>\r\n                </div>\r\n            );\r\n        }else{\r\n            return <LoadingPage/>\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        currentPage:state.currentPage,\r\n        maxPage:state.maxPage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        handleNextPage:()=>{dispatch(actions.nextPage())},\r\n        handlePreviousPage:()=>{dispatch(actions.previousPage())}\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PageList);","import React,{Component,Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nimport Pokemon from './Pokemon';\r\nimport PageList from './PageList';\r\nimport LoadingPage from './LoadingPage';\r\nimport '../css/PokeList.css';\r\n//페이지별로 포켓몬의 정보를 20개씩 출력하는 컴포넌트\r\nclass PokeList extends Component{\r\n    state={\r\n        isLoaded:false\r\n    };\r\n\r\n    componentDidMount=async()=>{\r\n        const {currentPage}=this.props;\r\n        const data=await this._APICall(currentPage);\r\n        await this.setState({\r\n            maxPage:data.maxPage,\r\n            paramError:data.paramError,\r\n            pokeList:data.result?data.result:null,\r\n            isLoaded:true\r\n        });\r\n        await this.props.setMaxPage(this.state.maxPage);\r\n    };\r\n\r\n    componentWillReceiveProps=async(nextProps)=>{\r\n        if(nextProps.currentPage!==this.props.currentPage){\r\n\r\n            await this.setState({isLoaded:false});\r\n            \r\n            const data=await this._APICall(nextProps.currentPage);\r\n            \r\n            await this.setState({\r\n                paramError:data.paramError,\r\n                pokeList:data.result?data.result:null,\r\n                isLoaded:true\r\n            });\r\n        }\r\n    }\r\n\r\n    _APICall=async (currentPage)=>{\r\n        const url=`/user/list/${currentPage}`;\r\n        const data = await fetch(url).then(res=>res.json())\r\n        return data;\r\n    };\r\n\r\n    render(){\r\n        if(this.state.isLoaded===true&&this.state.paramError===false){\r\n            return(\r\n                <Fragment>\r\n                    <div id=\"poke-list-wrapper\">\r\n                        { \r\n                            this.state.pokeList.map((pokemon,index)=>{\r\n                                return (\r\n                                    <Pokemon \r\n                                        id={pokemon.poke_id} \r\n                                        image={pokemon.poke_image} \r\n                                        habitat={pokemon.habitat_name_ko}\r\n                                        name={pokemon.poke_name_ko}\r\n                                        types={pokemon.types}\r\n                                        key={index}/>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <PageList/>\r\n                </Fragment>         \r\n            )\r\n        }else{\r\n            return (\r\n                <Fragment>\r\n                    <LoadingPage/>\r\n                    <PageList/>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        currentPage:state.currentPage\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        setMaxPage:(maxPage)=>{dispatch(actions.setMaxPage(maxPage))}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokeList);","import React, { Component } from 'react';\r\nimport * as actions from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport '../css/PokeSurveyResult.css';\r\n\r\nclass PokeSurveyResult extends Component {\r\n    _handleSurveyToggle=()=>{\r\n        this.props.handleSurveyToggle();\r\n    };\r\n\r\n    render() {\r\n        const {poke_image,poke_id,poke_name_ko,type_name_ko,habitat_name_ko}=this.props.surveyResult;\r\n        return (\r\n            <div id=\"poke-survey-result\">\r\n                <p id=\"result-title\">Survey Result</p>\r\n                <p>\r\n                    <span className=\"result-info-title\">&#8226; 도감번호 : </span>\r\n                    <span>{poke_id}</span>\r\n                </p>\r\n                <img src={poke_image}/>\r\n\r\n                <p>\r\n                    <span className=\"result-info-title\">&#8226; 이름 : </span>\r\n                    <span>{poke_name_ko}</span>\r\n                </p>\r\n                <p>\r\n                    <span className=\"result-info-title\">&#8226; 타입 : </span>\r\n                    <span>{type_name_ko}</span>\r\n                </p>\r\n                <p>\r\n                    <span className=\"result-info-title\">&#8226; 서식지 : </span>\r\n                    <span>{habitat_name_ko?habitat_name_ko:\"정보 없음\"}</span>\r\n                </p>\r\n\r\n                <button onClick={this._handleSurveyToggle}>Survey Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{};\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        handleSurveyToggle:()=>{dispatch(actions.changeSurveyStatus())}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokeSurveyResult);","import React, { Component } from 'react';\r\nimport PokeSurveyResult from './PokeSurveyResult';\r\nimport * as actions from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport '../css/PokeSurvey.css';\r\n\r\nclass PokeSurvey extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this._preventDefault=this._preventDefault.bind(this);\r\n    }\r\n\r\n    _preventDefault=async (e)=>{\r\n        e.preventDefault();\r\n        const req={};\r\n        req.isSanitary=this._getRadioValue(\"isSanitary\");\r\n        req.isActive=this._getRadioValue(\"isActive\");\r\n        req.isIndependent=this._getRadioValue(\"isIndependent\");\r\n\r\n        req.isMeek=this._getRadioValue(\"isMeek\");\r\n        req.isExtrovert=this._getRadioValue(\"isExtrovert\");\r\n        req.isCurious=this._getRadioValue(\"isCurious\");\r\n        req.isUnusual=this._getRadioValue(\"isUnusual\");\r\n\r\n        const url=\"/user/survey\";\r\n        let response=await fetch(url,{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Accept\":\"application/json\"\r\n            },\r\n            body:JSON.stringify(req)\r\n        });\r\n        response=await response.json();\r\n        const randomIndex=Math.floor(Math.random() * response.length);\r\n\r\n        await this.setState({\r\n            surveyResult:response[randomIndex]\r\n        });\r\n\r\n        await this.props.handleSurveyToggle();\r\n    };\r\n\r\n    _getRadioValue=(name)=>{\r\n        let result;\r\n        const nodeList=document.getElementsByName(name);\r\n        nodeList.forEach((item)=>{\r\n            if(item.checked===true){\r\n                result=item.value;\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const {currentSurveyStatus}=this.props;\r\n        if(currentSurveyStatus===true) return <PokeSurveyResult surveyResult={this.state.surveyResult}/>\r\n        return (\r\n            <div id=\"poke-survey-wrapper\">\r\n                <p id=\"survey-title\">Personality Survey</p>\r\n                <form action=\"/user/survey\" method=\"post\" onSubmit={this._preventDefault}>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">집과 업무 환경이 잘 정돈되어 있다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isSanitary\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            <input type=\"radio\" name=\"isSanitary\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n                    <hr/>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">의욕적이고 활동적이다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isActive\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            \r\n                            <input type=\"radio\" name=\"isActive\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n                    <hr/>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">여행 계획을 철저하게 세우는 편이다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isIndependent\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            <input type=\"radio\" name=\"isIndependent\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n                    <hr/>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">다툼이 일어나도 내가 참는 편이다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isMeek\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            <input type=\"radio\" name=\"isMeek\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n                    <hr/>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">새로운 사람들과 곧잘 어울린다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isExtrovert\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            <input type=\"radio\" name=\"isExtrovert\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n                    <hr/>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">새로운 것에 관심이 많다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isCurious\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            <input type=\"radio\" name=\"isCurious\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n                    <hr/>\r\n                    <p className=\"survey-wrapper\">\r\n                        <span className=\"survey-title\">종종 터무니없는 생각을 하며 시간을 보낸다.</span>\r\n                        <p>\r\n                            <span className=\"yes\">예</span>\r\n                            <input type=\"radio\" name=\"isUnusual\" value=\"true\" defaultChecked className=\"survey-button-true\"/>\r\n                            \r\n                            <span className=\"no\">아니오</span>\r\n                            <input type=\"radio\" name=\"isUnusual\" value=\"false\" className=\"survey-button-false\"/>\r\n                        </p>\r\n                    </p>\r\n\r\n                    <p id=\"survey-submit-wrapper\">\r\n                        <input type=\"submit\" value=\"Submit\"/>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        currentSurveyStatus:state.currentSurveyStatus        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        handleSurveyToggle:()=>{dispatch(actions.changeSurveyStatus())}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokeSurvey);","//Module import part\nimport React,{Component} from 'react';\n\n//Component import part\nimport PokeSearch from './Components/PokeSearch';\nimport PokeList from './Components/PokeList';\nimport PokeSurvey from './Components/PokeSurvey';\n\n//Page static config import part\nimport './css/App.css';\n\nclass App extends Component{\n  render(){\n    return(\n      <div id=\"app\">\n        <div id=\"header\">\n          <h1>Pokemon Search Site</h1>\n        </div>\n        <div id=\"content\">\n          <PokeList/>\n        </div>\n        <div id=\"sideNav\">\n          <PokeSearch/>\n          <PokeSurvey/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../actions/actionTypes';\r\n\r\nconst initialState={\r\n    currentPokeName:\"\",\r\n    currentPage:1,\r\n    maxPage:null,\r\n    currentSurveyStatus:false\r\n};\r\n\r\nexport function reducer(state=initialState,action){\r\n    switch(action.type){\r\n        //검색되는 포켓몬의 이름을 newState로 return\r\n        case types.CHANGE_POKE_NAME:{\r\n            const newState=Object.assign(\r\n                {},\r\n                state,\r\n                {currentPokeName:action.pokeName}\r\n            );\r\n            return newState;\r\n        }\r\n        //next Button을 클릭하였을 때 다음 페이지를 newState로 return\r\n        case types.NEXT_PAGE:{\r\n            if(state.currentPage>=state.maxPage){\r\n                return state;\r\n            }\r\n            const newState=Object.assign(\r\n                {},\r\n                state,\r\n                {currentPage:state.currentPage+1}\r\n            );\r\n            return newState;\r\n        }\r\n        case types.PREVIOUS_PAGE:{   \r\n            //currentPage가 0보다 작거나 같으면 기존 state를 그대로 반환\r\n            if(state.currentPage<=1){\r\n                return state;\r\n            }\r\n            const newState=Object.assign(\r\n                {},\r\n                state,\r\n                {currentPage:state.currentPage-1}\r\n            );\r\n            return newState;\r\n        };\r\n        case types.SET_MAX_PAGE:{\r\n            const newState=Object.assign(\r\n                {},\r\n                state,\r\n                {maxPage:action.maxPage}\r\n            );\r\n            return newState;\r\n        };\r\n        case types.CHANGE_PAGE:{\r\n            const newState=Object.assign(\r\n                {},\r\n                state,\r\n                {currentPage:action.pageNum}\r\n            );\r\n            return newState;\r\n        };\r\n        \r\n        case types.CHANGE_SURVEY_STATUS:{\r\n            const newState=Object.assign(\r\n                {},\r\n                state,\r\n                {currentSurveyStatus:!state.currentSurveyStatus}\r\n            );\r\n            console.log(newState);\r\n            return newState;\r\n        };\r\n\r\n        default : return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//react-redux 설정\nimport {createStore} from 'redux';\nimport {reducer} from './reducers/index';\nimport {Provider} from 'react-redux';\n\nconst store=createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n    \nserviceWorker.unregister();\n"],"sourceRoot":""}